'''3. Создайте собственный класс-исключение, который должен проверять содержимое
списка на наличие только чисел. Проверить работу исключения на реальном примере.
Необходимо запрашивать у пользователя данные и заполнять список.
Класс-исключение должен контролировать типы данных элементов списка.
Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно,
пока пользователь сам не остановит работу скрипта, введя, например, команду “stop”.
При этом скрипт завершается, сформированный список выводится на экран.
Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
 При вводе пользователем очередного элемента необходимо реализовать проверку
 типа элемента и вносить его в список, только если введено число. Класс-исключение должен
 не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
 При этом работа скрипта не должна завершаться.'''


class DigitalValidation(Exception):

    def __init__(self, txt):
        self.txt = txt

my_list = []
char = '-'
while True:
    if char != 'stop':
        try:
            char = input('Введите число. Нажмите Enter =>')
            if char == 'stop':
                print(my_list)
                break
            elif char.replace('.','',1).isdigit() == True: # проверка на вещественные числа
                my_list.append(char)
            else:
                raise DigitalValidation('Строка содержит не только числа. Введите повторно')
        except DigitalValidation as error_txt:
            print(error_txt)
    else:
        print('выход найден')
        print(my_list)
        break







'''class DigitalValidation(Exception):

    def __init__(self, txt):
        self.txt = txt


# ------------------ через проверку методом isdigit ----------------------------------
my_list = input('Введите числа через пробел =>').split(' ')
try:
    only_digit_list = [item for item in my_list if item.isdigit() == True or item == '']
    if len(my_list) == len(only_digit_list):
        print('Стрка содержит только числа')
    else:
        raise DigitalValidation('Стрка содержит не только числа')
except DigitalValidation as error_txt:
    print(error_txt)
# ---end-----end----end------ через проверку методом isdigit ---end-------end-------------'''


